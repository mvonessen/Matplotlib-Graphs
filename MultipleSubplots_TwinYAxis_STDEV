### LOADING PACKAGES
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.font_manager
from matplotlib import rcParams
from matplotlib import pyplot as plt
from matplotlib.patches import Patch # to create custom legend
from matplotlib.lines import Line2D  # to create custom legend
%matplotlib notebook


### SETTING SOME FIGURE DESIGN PARAMETERS
# Fonts & Labels
rcParams['axes.labelsize'] = 14
rcParams['xtick.labelsize'] = 12
rcParams['ytick.labelsize'] = 12
rcParams['legend.fontsize'] = 9

plt.rc('font', family='serif', serif='Times')
rcParams['font.family'] = 'serif'
rcParams['font.serif'] = ['Times']

# Size of the figure
width = 5.5             #5.5 inches ios roughly the width of the useable space on a vertical A4 space
height = width / 1.618  # dividing by 1.618 results in the golden ratio


### ASSIGNING DATA TO PYHON OBJECTS
# Time in years
Time = list(range(41))
#MG_NGOP = xxx
#MG_NGOP_STDEV = yyy 
# Assigning all the values here (removed it from this code to keep it short)

# Assigning standard deviation values - there is probably a built-in way to do this with python, but I calculated them in excel and then attributed the data
HO_NGOP_STDEVLOW = tuple(np.subtract((HO_NGOP),(HO_NGOP_STDEV))) #one method to add & subtract tuples from another 

### CREATING CUSTOMIZED LEGENDS
# I used this because the standard deviation wouldn't show up in the standard legned function 
legend_elements = [Patch(facecolor='grey', label='Standard deviation\nSmallholder pressure'),
                   Patch(facecolor='white', hatch='//////////', label='Standard deviation\nLargeholder pressure')
                   
### CONTINUE HERE
### PLOTTING THE DATA
# Creating the figure
rows = 3
cols = 3

fig, ax = plt.subplots(rows,cols,figsize=(12,10), gridspec_kw={'wspace':0.1,'hspace':0.1}, sharex = True)

plt.gcf().subplots_adjust(bottom=0.15, left=None, right=None, top=None) #to avoid the x-labels being cut off, tight_layout doesn't work in my case
#fig.supxlabel('Time (years)', y=0.5)

# SUBPLOT 0,0 - Assigning which data goes to which subpl
ax[0,0].plot(Time, HO_LHP, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)    # Creating a 'twin' of the y-axis
ax00 = ax[0,0].twinx()
ax00.plot(Time, HO_NGOP, color = 'grey', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)       # assigning the data
ax[0,0].set(                                                                                                    # Setting parameters, labels, etc. of the subplot
    xlim = (0,40), ylim = (-0.5,6), 
    xticks = (0,10,20,30,40), yticks = (0,1,2,3,4,5),  
    ylabel = 'Largeholder pressure', title = 'HANDS-OFF')
ax00.fill_between(Time, HO_NGOP_STDEVLOW, HO_NGOP_STDEVHIGH, alpha=0.2, edgecolor = None, facecolor = 'grey')
ax00.set(ylim = (-0.5,5), yticks = ())
ax[0,0].legend(handles=legend_elements, loc='upper left', framealpha=1)

# SUBPLOT 0,1 - Assigning which data goes to which subplot
ax[0,1].plot(Time, MG_LHP, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75) 
ax[0,1].fill_between(Time, MG_LHP_STDEVLOW, MG_LHP_STDEVHIGH, facecolor = 'white', hatch = '//////////', alpha=0.2) #alpha=0.2, edgecolor = 'black', facecolor = None, hatch = '////////'
ax01 = ax[0,1].twinx()                                           # Creating a 'twin' of the y-axis
ax01.plot(Time, MG_NGOP, color = 'grey', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)        # assigning the data
ax[0,1].set(xlim = (0,40), ylim = (-0.5,6),
            xticks = (0,10,20,30,40), title = 'MIDDLE-GROUND', yticks = ())
ax01.set(ylim = (-0.5, 6), yticks = ()) 
ax01.fill_between(Time, MG_NGOP_STDEVLOW, MG_NGOP_STDEVHIGH, alpha=0.2, facecolor = 'grey')


# SUBPLOT 0,2 - Assigning which data goes to which subpl
ax[0,2].plot(Time, PR_LHP, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)    # Assigning data
ax[0,2].fill_between(Time, PR_LHP_STDEVLOW, PR_LHP_STDEVHIGH, alpha=0.2, hatch = '//////////', facecolor = 'black') 
ax02 = ax[0,2].twinx()                                                                                          # Creating a 'twin' of the y-axis
ax02.plot(Time, PR_NGOP, color = 'grey', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)       # assigning the data
ax[0,2].set(                                                                                                    # Setting parameters, labels, etc. of the subplot
    xlim = (0,40), ylim = (-0.5,6), 
    xticks = (0,10,20,30,40), yticks = (), title = 'PROACTIVE GOVERNMENT')
ax02.set(ylim = (-0.5,6), yticks = (0,1,2,3,4,5), ylabel = 'NGO pressure')
ax02.yaxis.label.set_color('grey')
ax02.tick_params(axis='y', colors='grey') 
ax02.fill_between(Time, PR_NGOP_STDEVLOW, PR_NGOP_STDEVHIGH, alpha=0.2, facecolor = 'grey')

# plotting a 'secondary x-axis'
x2=(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
ax[0,0].plot(Time, x2, color = 'black', linewidth = 0.5)
ax[0,1].plot(Time, x2, color = 'black', linewidth = 0.5)
ax[0,2].plot(Time, x2, color = 'black', linewidth = 0.5)


### SECOND ROW - ONLY ONE Y AXIS
# SUBPLOT 1,0 - Assigning which data goes to which subpl
ax[1,0].plot(Time, HO_LT, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)    # Assigning data
ax[1,0].fill_between(Time, HO_LT_STDEVLOW, HO_LT_STDEVHIGH, alpha=0.2, facecolor = 'white', hatch = '//////////')
ax[1,0].set(                                                    # Setting parameters, labels, etc. of the subplot
    xlim = (0,40), ylim = (0.55,1.05), 
    xticks = (0,10,20,30,40), yticks = (0.6, 0.7, 0.8, 0.9, 1),  
    ylabel = 'Land costs')
ax[1,0].legend(handles=legend_elements2, loc = 'center left', framealpha=1)

# SUBPLOT 1,1 - Assigning which data goes to which subpl
ax[1,1].plot(Time, MG_LT, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)    # Assigning data
ax[1,1].fill_between(Time, MG_LT_STDEVLOW, MG_LT_STDEVHIGH, alpha=0.2, facecolor = 'white', hatch = '//////////')
ax[1,1].set(                                                    # Setting parameters, labels, etc. of the subplot
    xlim = (0,40), ylim = (0.55,1.05), yticks = ())

# SUBPLOT 1,2 - Assigning which data goes to which subpl
ax[1,2].plot(Time, PR_LT, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)    # Assigning data
ax[1,2].fill_between(Time, PR_LT_STDEVLOW, PR_LT_STDEVHIGH, alpha=0.2, facecolor = 'white', hatch = '//////////')
ax[1,2].set(                                                    # Setting parameters, labels, etc. of the subplot
    xlim = (0,40), ylim = (0.55,1.05), yticks = ())

### THIRD ROW
# SUBPLOT 2,0 - Assigning which data goes to which subpl
ax[2,0].plot(Time, HO_PA, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)    # Creating a 'twin' of the y-axis
ax[2,0].fill_between(Time, HO_PA_STDEVLOW, HO_PA_STDEVHIGH, facecolor = 'white', hatch = '//////////', alpha=0.2) #alpha=0.2, edgecolor = 'black', facecolor = None, hatch = '////////'
ax20 = ax[2,0].twinx()
ax20.plot(Time, HO_ENC, color = 'grey', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)       # assigning the data
ax[2,0].set(                                                                                                    # Setting parameters, labels, etc. of the subplot
    xlim = (0,40), ylim = (0,6000), 
    xticks = (0,10,20,30,40), yticks = (0,1000,2000,3000,4000,5000, 6000),  
    ylabel = 'Protected area')
ax20.set(ylim = (0,6000), yticks = ())
ax[2,0].legend(handles=legend_elements3, loc = 'upper left', framealpha=1)

# SUBPLOT 2,1 - Assigning which data goes to which subplot
ax[2,1].plot(Time, MG_PA, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75) 
ax[2,1].fill_between(Time, MG_PA_STDEVLOW, MG_PA_STDEVHIGH, facecolor = 'white', hatch = '//////////', alpha=0.2) #alpha=0.2, edgecolor = 'black', facecolor = None, hatch = '////////'
ax21 = ax[2,1].twinx()                                           # Creating a 'twin' of the y-axis
ax21.plot(Time, MG_ENC, color = 'grey', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)        # assigning the data
ax[2,1].set(xlim = (0,40), ylim = (0,6000),
            xticks = (0,10,20,30,40), yticks = (), xlabel = 'Time (years)')
ax[2,1].xaxis.set_label_coords(0.5, -0.3)
ax21.set(ylim = (0,6000), yticks = ())
#ax21.yaxis.label.set_color('grey')
#ax21.tick_params(axis='y', colors='grey') 

# SUBPLOT 2,2 - Assigning which data goes to which subpl
ax[2,2].plot(Time, PR_PA, color = 'black', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)    # Assigning data
ax[2,2].fill_between(Time, PR_PA_STDEVLOW, PR_PA_STDEVHIGH, facecolor = 'white', hatch = '//////////', alpha=0.2) #alpha=0.2, edgecolor = 'black', facecolor = None, hatch = '////////'
ax22 = ax[2,2].twinx()                                                                                          # Creating a 'twin' of the y-axis
ax22.plot(Time, PR_ENC, color = 'grey', marker = 'o', linestyle='-', markersize = 2, linewidth = 0.75)       # assigning the data
ax[2,2].set(                                                                                                    # Setting parameters, labels, etc. of the subplot
    xlim = (0,40), ylim = (0,6000), xticks = (0,10,20,30,40), yticks = ())
ax22.set(ylim = (0,6000), yticks = ())
ax22.set(ylim = (0,6000), yticks = (0,1000,2000,3000,4000,5000), ylabel = 'Encroached area')
ax22.yaxis.label.set_color('grey')
ax22.tick_params(axis='y', colors='grey') 

### ADDING GRID LINES
#for i in range(rows):
#    for j in range(cols):
#        ax[i,j].grid(color = 'grey', linewidth = 0.5, alpha = 0.25, linestyle = '--')
                  ]
