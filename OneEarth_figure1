#Importing libraries
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.lines as mlines
### ASSIGNING VALUES ####
## 1 - Forest extent (AD); keeping the abbreviation "AD" (from Avoided deforestation)
AD_avg, AD_std, AD_UA = (4185.82285714286, 2302.48142857143, 3073.38142857143), (537.453, 209.515, 390.054), (1509)
ind = np.arange(len(AD_avg)) 
### ASSIGNING VALUES ####
## 2 - AREA UNDER PROTECTION (PA) ###
PA_avg, PA_std, PA_UA = (3434.056, 618.84, 1227.519), (572.476, 85.407, 328.307), (656.1)
ind = np.arange(len(PA_avg)) 
### ASSIGNING VALUES ####
## 3 - LAND GRABBING (LG) ###
LG_avg, LG_std, LG_UA = (772.053, 737.213, 447.863), (242.785, 125.311, 141.346), (1285.3)
ind = np.arange(len(LG_avg))  
### ASSIGNING VALUES ####
## 4 - EXPROPRIATIONS (EX) ###
EX_avg, EX_std, EX_UA = (2190.791, 0, 0), (478.302, 0, 0), (0)
ind = np.arange(len(EX_avg))  
### ASSIGNING VALUES ####
## 5 - LOBBYING & CAMPAIGNING ###
LC_avg, LC_std, LC_UA = (286.727, 59.864, 205.82), (56.256, 63.921, 109.984), (111.546)
ind = np.arange(len(LC_avg))   
### ASSIGNING VALUES ####
## 6 - FINING & SHAMING ###
FS_avg, FS_std, FS_UA = (400.673, 151.147, 128.677), (108.462, 48.098, 72.997), (230.938)
ind = np.arange(len(FS_avg))  
#HOTIZONTAL BAR CHARTS WITH SIX PANELS
fig, ax = plt.subplots(2, 3, figsize=(12, 6), sharey=True, constrained_layout=False, tight_layout=False)
fig.suptitle('Performance indicators by intervention', fontweight='bold', fontsize=17, x=0.225, y=0.975, ha='left', va='top')
ax[0,0].invert_yaxis()

rects1 = ax[0,0].barh(np.arange(len(AD_avg)), AD_avg, xerr=AD_std, capsize=3,
                label='Forest extent', color='silver', height = 0.4)
rects2 = ax[1,0].barh(np.arange(len(PA_avg)), PA_avg, xerr=PA_std, capsize=3,
                label='Area under protection', color='silver', height = 0.4)
rects3 = ax[0,1].barh(np.arange(len(LG_avg)), LG_avg, xerr=LG_std, capsize=3,
                label='Land grabbing', color='silver', height = 0.4)
rects4 = ax[1,1].barh(np.arange(len(EX_avg)), EX_avg, xerr=EX_std, capsize=3,
                label='Expropriations', color='silver', height = 0.4)
rects5 = ax[0,2].barh(np.arange(len(LC_avg)), LC_avg, xerr=LC_std, capsize=3,
                label='Lobbying and\ncampaigning', color='silver', height = 0.4)
rects6 = ax[1,2].barh(np.arange(len(FS_avg)), FS_avg, xerr=FS_std, capsize=3,
                label='Fining and\nshaming', color='silver', height = 0.4)

# Creating a proxy artist for the the legend
red_line = mlines.Line2D([], [], color='red', linestyle='--', label='Weak regulations')
error_bar = mlines.Line2D([],[], color='black', linestyle='solid', label='Confidence interval (95%)', marker='|', markersize='8')

# LABELING THE PLOTS
ax[0,0].set_xlabel('Parcels')
ax[0,0].set_title('Forest extent', loc='left')
ax[0,0].set_yticks(ind)
ax[0,0].axvline(x=AD_UA, color='red', linestyle='--')
ax[0,0].set_yticklabels(('Command-and-control', 'Supply chain sustainability', 'Multi-stakeholder coalition'))

ax[1,0].set_xlabel('Parcels')
ax[1,0].set_title('Area under protection', loc='left')
ax[1,0].set_yticks(ind)
ax[1,0].axvline(x=PA_UA, color='red', linestyle='--')

ax[0,1].set_xlabel('Parcels')
ax[0,1].set_title('Land grabbing', loc='left')
ax[0,1].set_yticks(ind)
ax[0,1].axvline(x=LG_UA, color='red', linestyle='--')

ax[1,1].set_xlabel('Parcels')
ax[1,1].set_title('Expropriations', loc='left')
ax[1,1].set_yticks(ind)
ax[1,1].axvline(x=EX_UA, color='red', linestyle='--')

ax[0,2].set_xlabel('Transactions')
ax[0,2].set_title('Lobbying & campaigning', loc='left')
ax[0,2].set_yticks(ind)
ax[0,2].axvline(x=LC_UA, color='red', linestyle='--')

ax[1,2].set_xlabel('Transactions')
ax[1,2].set_title('Fining & shaming', loc='left')
ax[1,2].set_yticks(ind)
ax[1,2].axvline(x=FS_UA, color='red', linestyle='--')

plt.subplots_adjust(left=0.225,
                    bottom=0.15, 
                    right=0.975, 
                    top=0.85, 
                    wspace=0.1, 
                    hspace=0.75)

#setting fontsize for the entire figure
plt.rc('font', size=13)

#creating legend
ax[1,1].legend(handles=[red_line, error_bar], loc='center left', fontsize=11)

# saving the figure
# plt.savefig('your url', facecolor='white', dpi=600)
